plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk app_target_sdk

    defaultConfig {
        applicationId "com.woilsy.mock"
        minSdk app_min_sdk
        targetSdk app_target_sdk
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations.configureEach {
    //检查远程依赖是否存在更新
    resolutionStrategy.cacheChangingModulesFor 1 * 60, 'seconds'
    // 采用动态版本声明的依赖缓存1分钟
    resolutionStrategy.cacheDynamicVersionsFor 1 * 60, 'seconds'
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //保持依赖一致
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //Flow CallAdapter
    implementation "io.github.vincent-series:sharp-retrofit:2.0"
    implementation project(path: ':mock')
    debugImplementation project(':mock-debug')
    //mock
    //http
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    //log
    implementation "com.parkingwang:okhttp3-loginterceptor:0.5"
}